{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","console","log","alert","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","expenses","getMonth","ExpensesFilter","selected","onChangeFilter","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","useEffect","document","setExpenses","prevExpenses","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dc6990ee.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    console.log(enteredDate);\n\n    if (enteredTitle === \"\") {\n      // prevents blank strings\n      alert(\"Please enter a title.\");\n    } else if (enteredAmount === \"\") {\n      alert(\"Please enter an amount.\");\n    } else if (enteredDate === \"\") {\n      alert(\"Please enter a date.\");\n    } else {\n      props.onSaveExpenseData(expenseData); //clear states after submit\n      setEnteredTitle(\"\");\n      setEnteredAmount(\"\");\n      setEnteredDate(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\n    </div>\n  );\n};\n\nexport default NewExpense;\n","\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from 'react';\n\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\r\n\r\nexport default function ExpenseChart(props) {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); //starts at 0, Jan = 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n","import \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import { useState } from \"react\";\n\nimport ExpensesList from \"./ExpensesList\";\nimport Card from \"../UI/Card\";\nimport ExpenseChart from \"./ExpenseChart\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpenseChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState, useEffect } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Playstation 4\",\n    amount: 527.23,\n    date: new Date(2020, 2, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"Apple Car\",\n    amount: 60000.0,\n    date: new Date(2022, 10, 13),\n  },\n  {\n    id: \"e3\",\n    title: \"Giant Teddy Bear\",\n    amount: 129.78,\n    date: new Date(2019, 12, 24),\n  },\n  {\n    id: \"e4\",\n    title: \"Air conditioner\",\n    amount: 430,\n    date: new Date(2021, 4, 19),\n  },\n];\n\nconst App = () => {\n  useEffect(() => {\n    document.title = \"Budget-Organizer\";\n  }, []);\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}